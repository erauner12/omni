services:
  adguard:
    image: adguard/adguardhome
    container_name: adguard
    hostname: rpi1
    restart: unless-stopped
    network_mode: host
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adguard.rule=Host(`adguard-rpi1.ucdialplans.com`)"
      - "traefik.http.routers.adguard.entrypoints=websecure"
      - "traefik.http.routers.adguard.tls=true"
      - "traefik.http.routers.adguard.tls.certresolver=letsencrypt"
      - "traefik.http.services.adguard.loadbalancer.server.port=3000"
    volumes:
      - ./adguard/conf:/opt/adguardhome/conf
      - ./adguard/work:/opt/adguardhome/work


  dumpcerts:
    image: registry.ucdialplans.com/dumpcerts:latest
    container_name: dumpcerts
    restart: always
    command: "/certs/acme.json /certs"
    volumes:
      - ./certs:/certs 


  omni:
    image: ghcr.io/siderolabs/omni:v0.37.4
    container_name: omni
    restart: unless-stopped
    network_mode: host
    cap_add:
      - NET_ADMIN
    command:
      - --account-id=***REMOVED***
      - --name=onprem-omni
      - --cert=/tls.crt
      - --key=/tls.key
      - --siderolink-api-cert=/tls.crt
      - --siderolink-api-key=/tls.key
      - --private-key-source=file:///omni.asc
      - --event-sink-port=8091
      - --bind-addr=0.0.0.0:4443
      - --siderolink-api-bind-addr=0.0.0.0:8090
      - --k8s-proxy-bind-addr=0.0.0.0:8100
      - --advertised-api-url=https://omni.ucdialplans.com/
      - --siderolink-api-advertised-url=https://omni.ucdialplans.com:8090/
      - --siderolink-wireguard-advertised-addr=192.168.1.17:50180
      - --advertised-kubernetes-proxy-url=https://omni.ucdialplans.com:8100/
      - --auth-auth0-enabled=true
      - --auth-auth0-domain=ucdialplans.us.auth0.com
      - --auth-auth0-client-id=***REMOVED***
      - --initial-users=ken.lasko@gmail.com
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.omni.rule=HostRegexp(`omni.ucdialplans.com`)"
      - "traefik.http.routers.omni.entrypoints=websecure"
      - "traefik.http.routers.omni.tls=true"
      - "traefik.http.routers.omni.tls.certresolver=letsencrypt"
      - "traefik.http.services.omni.loadbalancer.server.port=4443"
      - "traefik.http.services.omni.loadbalancer.server.scheme=https"
    volumes:
      - ./omni/etcd:/_out/etcd
      - ./certs/star_ucdialplans_com.pem:/tls.crt
      - ./certs/star_ucdialplans_com.key:/tls.key
      - ./omni/omni.asc:/omni.asc
      - /dev/net/tun:/dev/net/tun


  portainer-agent:
    container_name: portainer-agent
    image: portainer/agent
    restart: always
    ports:
      - 9001:9001    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes


  traefik:
    container_name: traefik
    image: traefik
    restart: always
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --api.dashboard=true
      - --log.level=INFO
      - --log.filePath=/var/log/traefik.log
      - --serversTransport.insecureSkipVerify=true
      # Set up LetsEncrypt
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.letsencrypt.acme.email=ken.lasko@gmail.com
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      # Set up an insecure listener that redirects all traffic to TLS
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Set up the TLS configuration for our websecure listener
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=letsencrypt
      - --entrypoints.websecure.http.tls.domains[0].main=*.ucdialplans.com
    environment:
      - CLOUDFLARE_EMAIL=ken.lasko@gmail.com
      - CLOUDFLARE_DNS_API_TOKEN=***REMOVED***
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/letsencrypt"
      - "./traefik/logs/traefik.log:/var/log/traefik.log"
    labels:
      # Dashboard
      - "traefik.enable=true"
      - 'traefik.http.routers.traefik.rule=Host(`traefik-rpi1.ucdialplans.com`)'
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik.service=api@internal"
      - 'traefik.http.routers.traefik.middlewares=strip'
      - 'traefik.http.middlewares.strip.stripprefix.prefixes=/traefik'
      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    extra_hosts: 
      - host.docker.internal:172.19.0.1
    networks:
      - ipv6


  watchtower:
    container_name: watchtower
    image: containrrr/watchtower:armhf-latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 */12 * * *" --cleanup
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '30M'
    labels:
      - "org.label-schema.group=rpi1-container"
    networks:
      - ipv6


networks:
  ipv6:
    enable_ipv6: false
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1

